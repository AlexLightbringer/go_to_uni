import re
import time
import requests
from bs4 import BeautifulSoup
import telebot
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.common.exceptions import TimeoutException
from webdriver_manager.chrome import ChromeDriverManager

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = "6041548049:AAEvExz7ykJOTwWF2crh0oaDfGe7r8j1lFU"
USER_UNIQUE_ID = "3572733"
USER_CHAT_ID = 901147319
URL = "https://urfu.ru/ru/ratings-today/"
HEADERS = {"User-Agent": "Mozilla/5.0"}

MAX_RETRIES = 3           # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
WAIT_TIMEOUT = 120        # –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (—Å–µ–∫—É–Ω–¥)

bot = telebot.TeleBot(BOT_TOKEN)
last_message = None       # –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è


def check_page_access():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ URL.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ 200, –∏–Ω–∞—á–µ False.
    """
    try:
        r = requests.get(URL, headers=HEADERS, timeout=10)
        print(f"HTTP Status Code: {r.status_code}")
        return r.status_code == 200
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:", e)
        return False


def parse_with_selenium():
    """
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Selenium –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã,
    –∫–ª–∏–∫–∞–µ—Ç –ø–æ –Ω—É–∂–Ω–æ–º—É –∏–Ω—Å—Ç–∏—Ç—É—Ç—É –∏ —Ñ–æ—Ä–º–µ –æ–±—É—á–µ–Ω–∏—è,
    –æ–∂–∏–¥–∞–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ,
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML-–∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    –ü—Ä–∏ –Ω–µ—É–¥–∞—á–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –ø–æ–ø—ã—Ç–∫–∏ –¥–æ MAX_RETRIES —Ä–∞–∑.
    """
    chrome_options = Options()
    chrome_options.add_argument('--headless')  # –ó–∞–ø—É—Å–∫ –±–µ–∑ GUI
    chrome_options.add_argument('--no-sandbox')
    chrome_options.add_argument('--disable-dev-shm-usage')

    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)
    wait = WebDriverWait(driver, WAIT_TIMEOUT)

    html = None

    try:
        for attempt in range(1, MAX_RETRIES + 1):
            print(f"[INFO] –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã #{attempt}")
            driver.get(URL)

            try:
                # –ñ–¥—ë–º —Ç–∞–±–ª–∏—Ü—É —Å –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞–º–∏
                wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "table.menu-departments")))
                rows = driver.find_elements(By.CSS_SELECTOR, "table.menu-departments tr")

                found = False
                for row in rows:
                    cells = row.find_elements(By.TAG_NAME, "td")
                    if len(cells) < 2:
                        continue
                    if "–£—Ä–∞–ª—å—Å–∫–∏–π –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–π –∏–Ω—Å—Ç–∏—Ç—É—Ç" in cells[0].text:
                        links = cells[1].find_elements(By.TAG_NAME, "a")
                        for link in links:
                            if "–û—á–Ω–∞—è" in link.text:
                                print("‚úÖ –ö–ª–∏–∫–∞–µ–º –ø–æ '–û—á–Ω–∞—è'")
                                driver.execute_script("arguments[0].click();", link)
                                found = True
                                break
                    if found:
                        break

                if not found:
                    print("‚ùå –ò–Ω—Å—Ç–∏—Ç—É—Ç/—Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                    continue

                # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞
                wait.until(EC.presence_of_element_located((By.XPATH, f"//td[text()='{USER_UNIQUE_ID}']")))
                print("‚úÖ ID –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
                html = driver.page_source
                break

            except TimeoutException:
                print(f"[WARNING] –ü–æ–ø—ã—Ç–∫–∞ #{attempt} –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º...")
                time.sleep(5)

    finally:
        driver.quit()

    return html


def find_user_info(html):
    """
    –ü–∞—Ä—Å–∏—Ç HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã BeautifulSoup, –∏—â–µ—Ç —Ç–∞–±–ª–∏—Ü—ã —Å –¥–∞–Ω–Ω—ã–º–∏,
    –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç—É: –ø–æ–∑–∏—Ü–∏—è, —Å–æ–≥–ª–∞—Å–∏–µ, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç,
    –±–∞–ª–ª—ã, –ø–ª–∞–Ω –ø—Ä–∏—ë–º–∞, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è.
    """
    soup = BeautifulSoup(html, "html.parser")
    tables = soup.select("table.supp")

    user_info = None
    for i in range(len(tables)):
        header = tables[i]
        if "–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Å—Ç–∞ –≤ —Ä–∞–º–∫–∞—Ö –ö–¶–ü" not in header.text:
            continue

        plan = 0
        direction = ""
        try:
            plan_text = header.find("th", string="–ü–ª–∞–Ω –ø—Ä–∏–µ–º–∞").find_next_sibling("td").text.strip()
            plan = int(plan_text)
        except Exception:
            pass

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É)
        try:
            direction = header.find("th", string=re.compile("–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")).find_next_sibling("td").text.strip()
        except Exception:
            direction = ""

        if i + 1 < len(tables):
            data_table = tables[i + 1]
            rows = data_table.find_all("tr")[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            for pos, row in enumerate(rows, start=1):
                cols = row.find_all("td")
                if len(cols) < 2:
                    continue
                ab_id = cols[1].get_text(strip=True)
                if ab_id == USER_UNIQUE_ID:
                    consent = cols[2].get_text(strip=True)
                    priority = cols[3].get_text(strip=True)
                    score = cols[-2].get_text(strip=True)
                    user_info = {
                        "position": pos,
                        "consent": consent,
                        "priority": priority,
                        "score": score,
                        "plan": plan,
                        "inside": pos <= plan,
                        "direction": direction
                    }
                    return user_info
    return None


def send_telegram(info):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram,
    –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Å –ø—Ä–æ—à–ª–æ–≥–æ —Ä–∞–∑–∞.
    """
    global last_message
    inside_str = "‚úÖ –í–•–û–î–ò–¢ –í –ö–û–ù–ö–£–†–°!" if info['inside'] else "‚ùå –ù–ï –í–•–û–î–ò–¢ –≤ –∫–æ–Ω–∫—É—Ä—Å"

    message = (
        f"üìä –£–†–§–£ –†–µ–π—Ç–∏–Ω–≥\n"
        f"ID: {USER_UNIQUE_ID}\n"
        f"üè´ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {info['direction']}\n\n"
        f"üìç –ü–æ–∑–∏—Ü–∏—è: {info['position']} / {info['plan']}\n"
        f"üì© –°–æ–≥–ª–∞—Å–∏–µ: {info['consent']}\n"
        f"üìù –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {info['priority']}\n"
        f"üèÜ –ë–∞–ª–ª—ã: {info['score']}\n"
        f"{inside_str}"
    )

    if info['inside']:
        message += "\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –ø–æ—Å—Ç—É–ø–∏–ª!"

    if message != last_message:
        bot.send_message(USER_CHAT_ID, message)
        print("[INFO] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.")
        last_message = message
    else:
        print("[INFO] –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å.")


def run():
    """
    –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞,
    –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–∑ –≤ —á–∞—Å.
    """
    print("[INFO] –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –£–†–§–£...")
    while True:
        try:
            if not check_page_access():
                time.sleep(300)  # –ï—Å–ª–∏ —Å–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî –∂–¥—ë–º 5 –º–∏–Ω—É—Ç
                continue

            html = parse_with_selenium()
            if not html:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.")
                time.sleep(300)
                continue

            user_info = find_user_info(html)
            if user_info:
                send_telegram(user_info)
            else:
                print("‚ö†Ô∏è –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ.")
                bot.send_message(USER_CHAT_ID, "‚ö†Ô∏è –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ.")
        except Exception as e:
            print("[ERROR]", e)

        time.sleep(3600)  # –ó–∞–ø—É—Å–∫–∞—Ç—å —Ä–∞–∑ –≤ —á–∞—Å


if __name__ == "__main__":
    run()
